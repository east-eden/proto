syntax = "proto3";
package global;

option go_package = "bitbucket.org/funplus/server/proto/global";
option csharp_namespace = "global";

////////////////////////////////////////////////
// 客户端发送此消息后必须收到服务器返回的ServerResponseMessage消息后才能接触屏幕锁定
message C2S_WaitResponseMessage {
  int32 MsgId = 1;        // 客户端全局自增消息id
  uint32 InnerMsgCrc = 2; // 实际发送的消息名crc，例如Crc32("C2S_AddHero")
  bytes InnerMsgData = 3; // 实际消息二进制数据
}

message S2C_WaitResponseMessage {
  int32 MsgId = 1;   // 透传客户端发送过来的MsgId
  int32 ErrCode = 2; // 处理客户端请求后产生的错误码
}

////////////////////////////////////////////////
// Account
message AccountInfo {
  int64 id = 1;
  string name = 2;
  int32 level = 3;
}

////////////////////////////////////////////////
// Hero
message Hero {
  int64 Id = 1;
  int32 TypeId = 2;
  int32 Exp = 3;
  int32 Level = 4;
  int32 PromoteLevel = 5;   // 突破等级
  int32 Star = 6;           // 星级
  int32 NormalSpellId = 7;  // 普攻技能id
  int32 SpecialSpellId = 8; // 大招技能id
  int32 RageSpellId = 9;    // 怒气技能id
  int32 Friendship = 10;    // 友好度
  int32 FashionId = 11;     // 时装id
}

////////////////////////////////////////////////
// Fragment
message Fragment {
  int32 Id = 1;  // 碎片对应的英雄id
  int32 Num = 2; // 碎片数量
}

////////////////////////////////////////////////
// Loot 掉落信息
enum LootType {
  LootItem = 0;      // 物品
  LootToken = 1;     // 代币
  LootHero = 2;      // 英雄
  LootPlayerExp = 3; // 玩家经验
  LootFragment = 4;  // 碎片
}

message LootData {
  LootType Type = 1; // 掉落类型
  int32 Misc = 2;    // 掉落参数
  int32 Num = 3;     // 掉落数量
}

////////////////////////////////////////////////
// Item
message Item {
  int64 Id = 1;
  int32 TypeId = 2;
  int32 Num = 3;
}

////////////////////////////////////////////////
// Equip
message EquipData {
  int32 Exp = 1;      // 经验
  int32 Level = 2;    // 等级
  int32 Promote = 3;  // 突破等级
  bool Lock = 4;      // 锁定
  int64 EquipObj = 5; // 装备者id
}

message Equip {
  Item Item = 1;           // 物品data
  EquipData EquipData = 2; // 装备data
}

////////////////////////////////////////////////
// Crystal
// 晶石属性
message CrystalAtt {
  int32 AttRepoId = 1;    // 属性库id
  int32 AttRandRatio = 2; // 属性随机区间系数
}

message CrystalData {
  int32 Level = 1;                  // 等级
  int32 Exp = 2;                    // 经验
  int64 CrystalObj = 3;             // 装备者id
  CrystalAtt MainAtt = 4;           // 主属性
  repeated CrystalAtt ViceAtts = 5; // 多条副属性
}

message Crystal {
  Item Item = 1;               // 物品data
  CrystalData CrystalData = 2; // 晶石属性
}

////////////////////////////////////////////////
// player
message PlayerInfo {
  int64 Id = 1;
  int64 AccountId = 2;
  string Name = 3;
  int32 Exp = 4;
  int32 Level = 5;
}

////////////////////////////////////////////////
// 章节 & 关卡信息
message Chapter {
  int32 Id = 1;              // 章节id
  int32 Stars = 2;           // 当前星数
  repeated bool Rewards = 3; // 是否已领取章节奖励
}

message Stage {
  int32 Id = 1;                 // 关卡id
  int32 ChallengeTimes = 2;     // 已挑战次数
  bool FirstReward = 3;         // 是否已领取首次通关奖励
  repeated bool Objectives = 4; // 是否已达成目标
}

////////////////////////////////////////////////
// 邮件

// 邮件状态
enum MailStatus {
  Unread = 0;            // 未读
  Readed = 1;            // 已读
  GainedAttachments = 2; // 已获取附件
}

// 邮件类型
enum MailType {
  System = 0; // 系统发送
  Player = 1; // 玩家寄送
}

// 邮件上下文
message MailContext {
  int64 Id = 1;          // 邮件id
  int64 SenderId = 2;    // 发件人id
  MailStatus Status = 3; // 邮件状态
  MailType Type = 4;     // 邮件类型
  int32 Date = 5;        // 寄件日期
  int32 ExpireDate = 6;  // 过期日期
  string SenderName = 7; // 寄件人姓名
  string Title = 8;      // 邮件标题
  string Content = 9;    // 邮件内容
}

// 邮件信息
message Mail {
  MailContext Context = 1;           // 邮件上下文
  repeated LootData Attachments = 2; // 附件
}